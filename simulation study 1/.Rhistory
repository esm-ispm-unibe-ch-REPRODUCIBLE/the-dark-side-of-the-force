mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="B2"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
source("Model II - Random Effect.R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="D"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
N.sim=2
source("Model I - Fixed Effect - flat prior.R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="D"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
##################################################
source("Model I - Fixed Effect - flat prior.R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="D"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
source("Model II - Fixed Effect.R")
##################################################
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="C"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="C"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
N.sim
source("Model I - Fixed Effect - flat prior (scenario C).R")
model1=function() {
for(i in 1:NS){
dm[i]<-d[t2[i]]-d[t1[i]]
prec[i]<-1/(SE[i]*SE[i])
y[i]~dnorm(dm[i],prec[i])}
d[1]<-0
for(i in 2:NT){
d[i]~dnorm(0,0.0001)}
for (i in 1:NT){
for (j in i:NT){
D[j,i]<-d[j]-d[i]}}
#TreatmeNT hierarchy
order[1:NT]<- NT+1- rank(d[1:NT])
for(k in 1:NT) {
# this is when the outcome is positive - omit  'NT+1-' when the outcome is negative
most.effective[k]<-equals(order[k],1)
for(j in 1:NT) {
effectiveness[k,j]<- equals(order[k],j)}}
for(k in 1:NT) {
for(j in 1:NT) {
cumeffectiveness[k,j]<- sum(effectiveness[k,1:j])}}
#SUCRAS#
for(k in 1:NT) {
SUCRA[k]<- sum(cumeffectiveness[k,1:(NT-1)]) /(NT-1)}}
################
params=c()
for (i in 1:(N.treat-1)){
for (j in (i+1):N.treat){
params=c(params, paste("D[",j,",",i,"]",sep=""))
}}
for (i in 2:(N.treat)){
params=c(params, paste("d[",i,"]",sep=""))
}
for (i in 1:(N.treat)){
params=c(params, paste("SUCRA[",i,"]",sep=""))
}
#number of D parameters
no.D=N.treat*(N.treat-1)/2
##
initialval = NULL
data2 <- list(y = data1[[i]]$TE,SE=data1[[i]]$seTE, NS=length(data1[[i]]$studlab), t1=data1[[i]]$t1,t2=data1[[i]]$t2, NT=N.treat)
coverage[i]=(mean(jags.m[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),3]<0&jags.m[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),7]>0))
source("Model I - Fixed Effect - flat prior (scenario C).R")
N.sim=3
source("Model I - Fixed Effect - flat prior (scenario C).R")
##################################################
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="C"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
source("Model I - Fixed Effect - flat prior (scenario C).R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
# model II
source("Model II - Fixed Effect (Scenario C).R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
N.sim=2
# model III
source("Model III - Fixed Effect (Scenario C).R")
# model III
source("Model III - Fixed Effect (Scenario C).R")
# model III
source("Model III - Fixed Effect (Scenario C).R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="C"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
N.sim=2
# model II
source("Model II - Fixed Effect (Scenario C).R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
source("Model II - Fixed Effect (Scenario C).R")
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=1000
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="C"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
source("Model II - Fixed Effect (Scenario C).R")
##################################################
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
c(0.9+0.1*(1:(N.treat-1)))
set.seed(42)
##### SCENARIO G.1 #######
N.treat=10
N.studies.comp=1 # studies per comparison
data1=list()
net1=list()
#define the treatments in the studies
t1=c(rep(1,N.studies.comp*(N.treat-1)))
t2=c()
for (j in 2:N.treat)  {t2=c(t2,rep(j,N.studies.comp))}
N.stud=length(t1)
TE=c(0.9+0.1*(1:(N.treat-1)))
TE
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(21) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=20
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="B2"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
##################################################
# For scenarios A, B or D run one of the following models
# model I
source("Model I - Fixed Effect - flat prior.R")
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(21) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=20
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="B1"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
# model I
source("Model I - Fixed Effect - flat prior.R")
### summarize results
mean(MAE) # mean absolute error (basic parameters)
mean(coverage) # mean coverage of 95% CrI (basic parameters)
mean(bias) # mean bias (basic parameters)
sum(SSresults>0)/N.sim # percent of NMAs where at least one treatment effect was estimated to be non-zero with confidence
mean(difference.best.worst) # mean estimated difference between best and worst treatment
mean(sd.best.worst) # mean standard deviation for the estimated difference between best and worst treatment
mean(difference.best.reference) # mean estimated difference between best and worst treatment
mean(sd.best.ref) # mean standard deviation for the estimated difference between best and worst treatment
###################################################
#       Master file for simulation Study 1        #
###################################################
#empty memory
rm(list=ls())
# install if needed
#install.packages("R2jags")
# load package
library(R2jags)
set.seed(42) # THE ANSWER TO LIFE, THE UNIVERSE AND EVERYTHING
options(digits=3)
N.sim=2
# set working directory
setwd("C:/Users/efthimiou/Google Drive/PROJECT/multiple testing NMA/simulations 2/simulation study 1")
# choose scenario (N.scen=A1, A2, B1, B2, C or D)
N.scen="A1"
# generate the data for scenario k
source(paste("Data generation_Scenario ",N.scen,".R",sep=""))
##### some definitions
MAE=c()
bias=c()
SSresults=c()
difference.best.worst=c()
difference.best.reference=c()
sd.best.worst=c()
sd.best.ref=c()
coverage=c()
jags.m2=list()
#####################
#####################
model2=function() {
for(i in 1:NS){
dm[i]<-d[t2[i]]-d[t1[i]]
prec[i]<-1/(SE[i]*SE[i])
y[i]~dnorm(dm[i],prec[i])}
d[1]<-0
for(i in 2:NT){
d[i]~dnorm(md,sd)}
md~dnorm(0,0.1)
sd<-1/(td*td)
td~dunif(0,2)
for (i in 1:NT){
for (j in i:NT){
D[j,i]<-d[j]-d[i]}}
#TreatmeNT hierarchy
order[1:NT]<- NT+1- rank(d[1:NT])
for(k in 1:NT) {
# this is when the outcome is positive - omit  'NT+1-' when the outcome is negative
most.effective[k]<-equals(order[k],1)
for(j in 1:NT) {
effectiveness[k,j]<- equals(order[k],j)}}
for(k in 1:NT) {
for(j in 1:NT) {
cumeffectiveness[k,j]<- sum(effectiveness[k,1:j])}}
#SUCRAS#
for(k in 1:NT) {
SUCRA[k]<- sum(cumeffectiveness[k,1:(NT-1)]) /(NT-1)}}
params=c()
for (i in 1:(N.treat-1)){
for (j in (i+1):N.treat){
params=c(params, paste("D[",j,",",i,"]",sep=""))
}}
for (i in 2:(N.treat)){
params=c(params, paste("d[",i,"]",sep=""))
}
for (i in 1:(N.treat)){
params=c(params, paste("SUCRA[",i,"]",sep=""))
}
#number of D parameters
no.D=N.treat*(N.treat-1)/2
for (i in 1:N.sim){
initialval = NULL
data2 <- list(y = data1[[i]]$TE,SE=data1[[i]]$seTE, NS=length(data1[[i]]$studlab), t1=data1[[i]]$t1,t2=data1[[i]]$t2, NT=N.treat)
jags.m2[[i]] <- jags.parallel(data=data2,initialval,parameters.to.save = params, n.chains = 2, n.iter = 15000, n.thin=1, n.burnin = 5000, DIC=F, model.file = model2)
print(i)
bias[i]=(mean(jags.m2[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),1]))
MAE[i]=mean(abs(jags.m2[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),1]))
coverage[i]=(mean(jags.m2[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),3]<0&jags.m2[[i]]$BUGSoutput$summary[(no.D+N.treat+1):(no.D+2*N.treat-1),7]>0))
SSresults[i]=sum(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0) ### 95% CrI does not include 0
best.treat=which.max(jags.m2[[i]]$BUGSoutput$summary[(no.D+1):(no.D+N.treat-1),1])
best.treat=substr(names(best.treat),7,nchar(names(best.treat))-1)
worst.treat=which.min(jags.m2[[i]]$BUGSoutput$summary[(no.D+1):(no.D+N.treat-1),1])
worst.treat=substr(names(worst.treat),7,nchar(names(worst.treat))-1)
index1.difference.best.worst= (as.numeric(best.treat)>as.numeric(worst.treat))*which(rownames(jags.m2[[i]]$BUGSoutput$summary)==paste("D[",best.treat,",",worst.treat,"]",sep=""))
index2.difference.best.worst= (as.numeric(best.treat)<as.numeric(worst.treat))*which(rownames(jags.m2[[i]]$BUGSoutput$summary)==paste("D[",worst.treat,",",best.treat,"]",sep=""))
index.difference.best.worst=max(index1.difference.best.worst,index2.difference.best.worst)
difference.best.worst[i]=abs(jags.m2[[i]]$BUGSoutput$summary[index.difference.best.worst,1])
sd.best.worst[i]=abs(jags.m2[[i]]$BUGSoutput$summary[index.difference.best.worst,2])
index.difference.best.ref=which(rownames(jags.m2[[i]]$BUGSoutput$summary)==paste("D[",best.treat,",",1,"]",sep=""))
if(length(index.difference.best.ref)!=0){
difference.best.reference[i]=abs(jags.m2[[i]]$BUGSoutput$summary[index.difference.best.ref,1])
sd.best.ref[i]=(jags.m2[[i]]$BUGSoutput$summary[index.difference.best.ref,2])} else {
difference.best.reference[i]=0
sd.best.ref[i]=0
}
jags.m2[[i]]=NULL
}
SSresults[i]
jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0
initialval = NULL
data2 <- list(y = data1[[i]]$TE,SE=data1[[i]]$seTE, NS=length(data1[[i]]$studlab), t1=data1[[i]]$t1,t2=data1[[i]]$t2, NT=N.treat)
jags.m2[[i]] <- jags.parallel(data=data2,initialval,parameters.to.save = params, n.chains = 2, n.iter = 15000, n.thin=1, n.burnin = 5000, DIC=F, model.file = model2)
print(i)
jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]
SSresults[i]=(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0) ### 95% CrI does not include 0
SSresults[i]=(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0)
jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0
jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0)
jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0
(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0)
SSresults[i]=(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0) ### 95% CrI does not include 0
SSresult=(jags.m2[[i]]$BUGSoutput$summary[1:no.D,3]>0|jags.m2[[i]]$BUGSoutput$summary[1:no.D,7]<0) ### 95% CrI does not include 0
SSresult
